name: Deploy to EKS

on:
  push:
    branches:
      - main  # Adjust branch as needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write  # Needed for OIDC authentication with AWS

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::495599743940:role/GitHubActionsEKSRole
          aws-region: ${{ secrets.AWS_REGION }}
        
      - name: Login to Amazon ECR
        run: |
         aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      
      - name: Update Kubernetes manifests
        run: |
          sed -i "s|IMAGE_PLACEHOLDER|${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}|g" k8s/deployment.yaml

          # Step 3: Trigger CodeBuild project (Build and deploy to EKS)
      - name: Trigger CodeBuild project
        run: |
          aws codebuild start-build --project-name MyEKSBuildProject

      # Step 4: Optional, monitor build logs from CodeBuild
      - name: Monitor CodeBuild logs
        run: |
          BUILD_ID=$(aws codebuild list-builds-for-project --project-name MyEKSBuildProject --query 'ids[0]' --output text)
          aws codebuild batch-get-builds --ids $BUILD_ID

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }} --role-arn arn:aws:iam::495599743940:role/GitHubActionsEKSRole
    
      - name: Verify AWS Identity
        run: aws sts get-caller-identity

      - name: Verify kubectl access
        run: |
          kubectl config current-context
          kubectl cluster-info
          kubectl get nodes
      
      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/ --validate=false

      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/tasky-app -n tasky --timeout=5m

